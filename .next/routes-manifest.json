{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/admin-reset-password/[token]",
      "regex": "^/admin\\-reset\\-password/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/admin\\-reset\\-password/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/admin-reset-password/[token]",
      "regex": "^/api/auth/admin\\-reset\\-password/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/api/auth/admin\\-reset\\-password/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/user-reset-password/[token]",
      "regex": "^/api/auth/user\\-reset\\-password/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/api/auth/user\\-reset\\-password/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/complaint/[id]",
      "regex": "^/api/complaint/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/complaint/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/reset-password/[token]",
      "regex": "^/reset\\-password/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/reset\\-password/(?<nxtPtoken>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/admin-register",
      "regex": "^/admin/admin\\-register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/admin\\-register(?:/)?$"
    },
    {
      "page": "/admin/dashboard",
      "regex": "^/admin/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/dashboard(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/check-status",
      "regex": "^/check\\-status(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/check\\-status(?:/)?$"
    },
    {
      "page": "/engineer/dashboard",
      "regex": "^/engineer/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/engineer/dashboard(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/manager/dashboard",
      "regex": "^/manager/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/manager/dashboard(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/user/dashboard",
      "regex": "^/user/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/dashboard(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}