{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/admin/Desktop/it/app/Components/User/UserDashboard.jsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useCallback, useMemo, useRef } from \"react\";\r\nimport { useSession, signOut } from \"next-auth/react\";\r\nimport {\r\n  FiTrash2,\r\n  FiPaperclip,\r\n  FiCheckCircle,\r\n  FiAlertCircle,\r\n  FiClock,\r\n  FiChevronDown,\r\n  FiChevronUp,\r\n  FiPlus,\r\n  FiLogOut,\r\n  FiSearch,\r\n  FiUser,\r\n  FiHome,\r\n  FiList,\r\n  FiX,\r\n  FiArrowLeft,\r\n} from \"react-icons/fi\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport \"./UserDashboard.css\";\r\n// Constants moved outside component to prevent recreation on every render\r\nconst FIELD_MAPPINGS = {\r\n  Name: { required: true, maxLength: 100 },\r\n  Email: { required: true, maxLength: 100 },\r\n  \"Phone Number\": { required: true, maxLength: 10, pattern: /^[0-9]{10}$/ },\r\n  \"Complaint Type\": {\r\n    required: true,\r\n    options: [\"Hardware\", \"Software\", \"Network\"],\r\n  },\r\n  \"Complaint Sub-Type\": {\r\n    required: false,\r\n    options: {\r\n      Hardware: [\r\n        \"Hard Disk Issue\",\r\n        \"Motherboard Issue\",\r\n        \"Keyboard Problem\",\r\n        \"Monitor Issue\",\r\n      ],\r\n      Software: [\r\n        \"Addmobe Issue\",\r\n        \"MS Office Related\",\r\n        \"Operating System\",\r\n        \"Application Crash\",\r\n      ],\r\n      Network: [\r\n        \"WiFi Not Working\",\r\n        \"LAN Not Working\",\r\n        \"Connection Drops\",\r\n        \"Slow Speed\",\r\n      ],\r\n    },\r\n  },\r\n  Location: {\r\n    required: true,\r\n    options: [\"Delhi\", \"Noida\"],\r\n    branches: {\r\n      Noida: [\"PLOT NO - 56, 6C, C Block, Phase 2, C Block, Sector 62, Noida\"],\r\n      Delhi: [\"70A/32, 3rd floor, Rama Road, Kirti Nagar, Delhi-110015\"],\r\n    },\r\n  },\r\n  \"Company Name\": { required: true },\r\n  Title: { required: true, maxLength: 200 },\r\n  Description: { required: true, maxLength: 2000 },\r\n};\r\nconst STATUS_CONFIG = {\r\n  pending: {\r\n    text: \"Pending\",\r\n    color: \"#F59E0B\",\r\n    icon: <FiClock />,\r\n  },\r\n  in_progress: {\r\n    text: \"In Progress\",\r\n    color: \"#3B82F6\",\r\n    icon: <FiClock />,\r\n  },\r\n  resolved: {\r\n    text: \"Resolved\",\r\n    color: \"#10B981\",\r\n    icon: <FiCheckCircle />,\r\n  },\r\n  rejected: {\r\n    text: \"Rejected\",\r\n    color: \"#EF4444\",\r\n    icon: <FiAlertCircle />,\r\n  },\r\n};\r\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\r\nconst MAX_FILE_COUNT = 5;\r\nconst ALLOWED_FILE_TYPES = [\"image/jpeg\", \"image/png\", \"application/pdf\"];\r\n// Custom Hook for debouncing\r\nconst useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n    return () => clearTimeout(handler);\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n// Memoized LoadingSpinner component to prevent unnecessary re-renders\r\nconst LoadingSpinner = React.memo(() => (\r\n  <div className=\"spinner-container\">\r\n    <div className=\"spinner\"></div>\r\n    <p>Loading...</p>\r\n  </div>\r\n));\r\n// Memoized StatusBadge component\r\nconst StatusBadge = React.memo(({ status }) => {\r\n  const config = STATUS_CONFIG[status] || STATUS_CONFIG.pending;\r\n  return (\r\n    <span\r\n      className=\"status-badge\"\r\n      style={{\r\n        backgroundColor: `${config.color}20`,\r\n        color: config.color,\r\n        borderColor: config.color,\r\n      }}\r\n    >\r\n      {config.icon}\r\n      {config.text}\r\n    </span>\r\n  );\r\n});\r\n// Memoized ComplaintCard component with optimized handlers\r\nconst ComplaintCard = React.memo(\r\n  ({ complaint }) => {\r\n    const formatComplaintId = useCallback((id) => {\r\n      return id ? `#${id.toString().slice(-6).toUpperCase()}` : \"#N/A\";\r\n    }, []);\r\n    const formatDate = useCallback((dateString) => {\r\n      if (!dateString) return \"N/A\";\r\n      const options = {\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      };\r\n      return new Date(dateString).toLocaleDateString(\"en-US\", options);\r\n    }, []);\r\n    const statusConfig = useMemo(\r\n      () => ({\r\n        pending: {\r\n          color: \"rgb(245, 158, 11)\",\r\n          bgColor: \"rgba(245, 158, 11, 0.125)\",\r\n          icon: <FiClock />,\r\n        },\r\n        in_progress: {\r\n          color: \"rgb(59, 130, 246)\",\r\n          bgColor: \"rgba(59, 130, 246, 0.125)\",\r\n          icon: <FiClock />,\r\n        },\r\n        resolved: {\r\n          color: \"rgb(16, 185, 129)\",\r\n          bgColor: \"rgba(16, 185, 129, 0.125)\",\r\n          icon: <FiCheckCircle />,\r\n        },\r\n        rejected: {\r\n          color: \"rgb(239, 68, 68)\",\r\n          bgColor: \"rgba(239, 68, 68, 0.125)\",\r\n          icon: <FiAlertCircle />,\r\n        },\r\n      }),\r\n      []\r\n    );\r\n    const status = complaint.status || \"pending\";\r\n      const currentStatus = statusConfig[status];\r\n    return (\r\n      <div className=\"complaint-card\">\r\n        <div className=\"card-header\">\r\n          <div className=\"header-content\">\r\n            <h3>{complaint.title || \"Untitled Complaint\"}</h3>\r\n            <div className=\"card-meta\">\r\n              <div className=\"complaint-id\">\r\n                {complaint.complaintId || \"Untitled Complaint\".complaintId}\r\n              </div>\r\n              <span className=\"complaint-date\">\r\n                {formatDate(complaint.createdAt)}\r\n              </span>\r\n       <div\r\n            className=\"complaint-status\"\r\n            style={{\r\n              display: \"inline-flex\",\r\n              alignItems: \"center\",\r\n              gap: \"6px\",\r\n              backgroundColor: currentStatus?.bgColor || \"#f3f4f6\",\r\n              color: currentStatus?.color || \"#374151\",\r\n              padding: \"4px 8px\",\r\n              borderRadius: \"4px\",\r\n              fontWeight: 500,\r\n              marginLeft: \"auto\",\r\n            }}\r\n          >\r\n            {currentStatus?.icon}\r\n            {status.replace(\"_\", \" \")}\r\n          </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AnimatePresence>\r\n          <motion.div\r\n            className=\"card-body\"\r\n            initial={{ opacity: 0, height: 0 }}\r\n            animate={{ opacity: 1, height: \"auto\" }}\r\n            exit={{ opacity: 0, height: 0 }}\r\n            transition={{ duration: 0.2 }}\r\n          >\r\n            <div className=\"complaint-details\">\r\n              <div className=\"detail-row\">\r\n                <span className=\"detail-label\">Type:</span>\r\n                <span className=\"detail-value\">\r\n                  {complaint[\"complaintType\"] || \"Not specified\"}\r\n                  {complaint[\"complaintSubType\"] &&\r\n                    ` (${complaint[\"complaintSubType\"]})`}\r\n                </span>\r\n              </div>\r\n              <div className=\"detail-row\">\r\n                <span className=\"detail-label\">Location:</span>\r\n                <span className=\"detail-value\">\r\n                  {complaint.location || \"Not specified\"}\r\n                </span>\r\n              </div>\r\n              <div className=\"detail-row\">\r\n                <span className=\"detail-label\">Branch:</span>\r\n                <span className=\"detail-value\">\r\n                  {complaint[\"companyAddress\"] || \"Not specified\"}\r\n                </span>\r\n              </div>\r\n              <div className=\"detail-row full-width\">\r\n                <span className=\"detail-label\">Description:</span>\r\n                <p className=\"detail-value\">\r\n                  {complaint.description || \"No description provided\"}\r\n                </p>\r\n              </div>\r\n              {complaint.attachments?.length > 0 && (\r\n                <div className=\"detail-row full-width\">\r\n                  <span className=\"detail-label\">Attachments:</span>\r\n                  <div className=\"attachments-list\">\r\n                    {complaint.attachments.map((file, index) => (\r\n                      <a\r\n                        key={index}\r\n                        href={file.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"attachment-item\"\r\n                      >\r\n                        <FiPaperclip />\r\n                        {file.name}\r\n                      </a>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    // Custom comparison function to prevent unnecessary re-renders\r\n    return (\r\n      prevProps.expanded === nextProps.expanded &&\r\n      prevProps.complaint.complaintId === nextProps.complaint.complaintId &&\r\n      prevProps.complaint.status === nextProps.complaint.status\r\n    );\r\n  }\r\n);\r\nconst UserDashboard = () => {\r\n  const { data: session, status } = useSession();\r\n  const [activeTab, setActiveTab] = useState(\"history\");\r\n  const [form, setForm] = useState({\r\n    Name: \"\",\r\n    Email: \"\",\r\n    \"Phone Number\": \"\",\r\n    \"Complaint Type\": \"\",\r\n    \"Complaint Sub-Type\": \"\",\r\n    Location: \"\",\r\n    \"Company Name\": \"\",\r\n    Title: \"\",\r\n    Description: \"\",\r\n    assignedTo: \"\",\r\n  assignedToEmail: \"\",\r\n  engineerMessage: \"\"\r\n  });\r\n  const [files, setFiles] = useState([]);\r\n  const [loadingForm, setLoadingForm] = useState(false);\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [submittedComplaint, setSubmittedComplaint] = useState(null);\r\n  const [errors, setErrors] = useState([]);\r\n  const [complaints, setComplaints] = useState([]);\r\n  const [loadingComplaints, setLoadingComplaints] = useState(false);\r\n  const [fetchError, setFetchError] = useState(\"\");\r\n  const [expandedComplaint, setExpandedComplaint] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n  const fileInputRef = useRef(null);\r\n  // Initialize form with user data\r\n  useEffect(() => {\r\n    if (session?.user) {\r\n      setForm((prev) => ({\r\n        ...prev,\r\n        Name: session.user.name || \"\",\r\n        Email: session.user.email || \"\",\r\n      }));\r\n    }\r\n  }, [session]);\r\n  // Fetch complaints from database\r\n  const fetchComplaints = useCallback(async () => {\r\n    if (!session?.user?.email) return;\r\n    setLoadingComplaints(true);\r\n    setFetchError(\"\");\r\n    try {\r\n      const res = await fetch(\r\n        `/api/complaint?email=${encodeURIComponent(session.user.email)}`\r\n      );\r\n      if (!res.ok) throw new Error(\"Failed to fetch complaints\");\r\n      const data = await res.json();\r\n      const complaintsArray = Array.isArray(data) ? data : data.complaints;\r\n      if (!Array.isArray(complaintsArray)) {\r\n        throw new Error(\"Invalid data format from server\");\r\n      }\r\n      // Sort by creation date (newest first)\r\n      const sorted = complaintsArray.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n      setComplaints(sorted);\r\n    } catch (err) {\r\n      console.error(\"Error fetching complaints:\", err);\r\n      setFetchError(err.message);\r\n    } finally {\r\n      setLoadingComplaints(false);\r\n    }\r\n  }, [session]);\r\n  // Load complaints when tab changes to history\r\n  useEffect(() => {\r\n    if (activeTab === \"history\") {\r\n      fetchComplaints();\r\n    }\r\n  }, [activeTab, fetchComplaints]);\r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    // Phone number validation\r\n    if (name === \"Phone Number\" && (!/^\\d*$/.test(value) || value.length > 10))\r\n      return;\r\n    setForm((prev) => {\r\n      const updated = {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n      // Reset dependent fields\r\n      if (name === \"Complaint Type\") updated[\"Complaint Sub-Type\"] = \"\";\r\n      if (name === \"Location\") updated[\"Company Name\"] = \"\";\r\n      return updated;\r\n    });\r\n  }, []);\r\n  const clearField = useCallback((fieldName) => {\r\n    setForm((prev) => {\r\n      const updated = {\r\n        ...prev,\r\n        [fieldName]: \"\",\r\n      };\r\n      // Reset dependent fields\r\n      if (fieldName === \"Complaint Type\") updated[\"Complaint Sub-Type\"] = \"\";\r\n      if (fieldName === \"Location\") updated[\"Company Name\"] = \"\";\r\n      return updated;\r\n    });\r\n  }, []);\r\n  const handleFileChange = useCallback(\r\n    (e) => {\r\n      if (!e.target.files) return;\r\n      const selected = Array.from(e.target.files)\r\n        .slice(0, MAX_FILE_COUNT - files.length)\r\n        .filter(\r\n          (file) =>\r\n            file.size <= MAX_FILE_SIZE && ALLOWED_FILE_TYPES.includes(file.type)\r\n        );\r\n      setFiles((prev) => [...prev, ...selected]);\r\n    },\r\n    [files.length]\r\n  );\r\n  const removeFile = useCallback((index) => {\r\n    setFiles((prev) => prev.filter((_, i) => i !== index));\r\n  }, []);\r\n  const validateForm = useCallback(() => {\r\n    const newErrors = [];\r\n    Object.entries(FIELD_MAPPINGS).forEach(([field, rules]) => {\r\n      if (rules.required && !form[field]) {\r\n        newErrors.push(`${field} is required`);\r\n      }\r\n    });\r\n    if (files.length > MAX_FILE_COUNT) {\r\n      newErrors.push(`Maximum ${MAX_FILE_COUNT} files allowed`);\r\n    }\r\n    setErrors(newErrors);\r\n    return newErrors.length === 0;\r\n  }, [form, files]);\r\nconst handleSubmit = useCallback(async (e) => {\r\n  e.preventDefault();\r\n  setLoadingForm(true);\r\n  setErrors([]);\r\n  \r\n  if (!validateForm()) {\r\n    setLoadingForm(false);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const formData = new FormData();\r\n    \r\n    // Append all form fields\r\n    Object.entries(form).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n\r\n    // Append each file separately\r\n    files.forEach((file) => {\r\n      formData.append(\"files\", file); // Changed from \"file\" to \"files\"\r\n    });\r\n\r\n    const res = await fetch(\"/api/complaint\", {\r\n      method: \"POST\",\r\n      body: formData, // No headers needed for FormData\r\n    });\r\n        \r\n        if (!res.ok) {\r\n          const errorData = await res.json();\r\n          throw new Error(errorData.message || \"Failed to submit complaint\");\r\n        }\r\n        const result = await res.json();\r\n        setSubmittedComplaint(result);\r\n        setSuccessMsg(`Complaint submitted successfully!`);\r\n        setShowSuccessModal(true);\r\n        resetForm();\r\n        await fetchComplaints();\r\n      } catch (err) {\r\n        console.error(\"Error submitting complaint:\", err);\r\n        setErrors([err.message]);\r\n      } finally {\r\n        setLoadingForm(false);\r\n      }\r\n    },\r\n    [form, files, validateForm, fetchComplaints]\r\n  );\r\n  const resetForm = useCallback(() => {\r\n    setForm({\r\n      Name: session?.user?.name || \"\",\r\n      Email: session?.user?.email || \"\",\r\n      \"Phone Number\": \"\",\r\n      \"Complaint Type\": \"\",\r\n      \"Complaint Sub-Type\": \"\",\r\n      Location: \"\",\r\n      \"Company Name\": \"\",\r\n      Title: \"\",\r\n      Description: \"\",\r\n       assignedTo: \"\",\r\n    assignedToEmail: \"\",\r\n    engineerMessage: \"\"\r\n    });\r\n    setFiles([]);\r\n    setErrors([]);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = \"\";\r\n    }\r\n  }, [session]);\r\n  // Filter complaints based on search and status\r\n  const filteredComplaints = useMemo(() => {\r\n    return complaints.filter((complaint) => {\r\n      // Status filter\r\n      if (statusFilter !== \"all\" && complaint.status !== statusFilter)\r\n        return false;\r\n      // Search term\r\n      if (debouncedSearchTerm) {\r\n        const term = debouncedSearchTerm.toLowerCase();\r\n        return (\r\n          complaint.Title?.toLowerCase().includes(term) ||\r\n          complaint.Description?.toLowerCase().includes(term) ||\r\n          complaint.complaintId?.toLowerCase().includes(term)\r\n        );\r\n      }\r\n      return true;\r\n    });\r\n  }, [complaints, debouncedSearchTerm, statusFilter]);\r\n  // Get company name options based on selected location\r\n  const companyNameOptions = useMemo(() => {\r\n    if (!form.Location) return [];\r\n    return FIELD_MAPPINGS.Location.branches[form.Location] || [];\r\n  }, [form.Location]);\r\n  const toggleComplaintExpand = useCallback((complaintId) => {\r\n    setExpandedComplaint((prev) => (prev === complaintId ? null : complaintId));\r\n  }, []);\r\n  if (status === \"loading\") return <LoadingSpinner />;\r\n  if (status === \"unauthenticated\")\r\n    return (\r\n      <div className=\"auth-error\">\r\n        <FiAlertCircle />\r\n        <h2>Access Denied</h2>\r\n        <p>Please sign in to access the dashboard</p>\r\n        <Link href=\"/login\">Sign In</Link>\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Success Modal */}\r\n      <AnimatePresence>\r\n        {showSuccessModal && (\r\n          <motion.div\r\n            className=\"success-modal-overlay\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            onClick={() => setShowSuccessModal(false)}\r\n          >\r\n            <motion.div\r\n              className=\"success-modal\"\r\n              initial={{ scale: 0.9, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              exit={{ scale: 0.9, opacity: 0 }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <FiCheckCircle className=\"success-icon\" />\r\n              <h3>Complaint Submitted Successfully!</h3>\r\n              <p>Your complaint has been registered with reference ID:</p>\r\n              <div className=\"complaint-id\">\r\n                {submittedComplaint.complaintId || \"Untitled Complaint\".complaintId }\r\n                \r\n              </div>\r\n              <p>We'll get back to you soon with updates.</p>\r\n              <div className=\"modal-actions\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowSuccessModal(false);\r\n                    setActiveTab(\"history\");\r\n                  }}\r\n                  className=\"view-complaints-btn\"\r\n                >\r\n                  View My Complaints\r\n                </button>\r\n                <button\r\n                  onClick={() => setShowSuccessModal(false)}\r\n                  className=\"close-modal-btn\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n      {/* Sidebar */}\r\n      <aside className=\"sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h2>\r\n            {\" \"}\r\n            <FiHome className=\"logo-icon\" /> &nbsp; Complaint Portal\r\n          </h2>\r\n          <div className=\"user-profile\">\r\n            <div className=\"avatar\">\r\n              {session?.user?.image ? (\r\n                <Image\r\n                  src={session.user.image}\r\n                  alt=\"User\"\r\n                  width={40}\r\n                  height={40}\r\n                  priority\r\n                />\r\n              ) : (\r\n                <FiUser className=\"default-avatar\" />\r\n              )}\r\n            </div>\r\n            <div>\r\n              <p className=\"username\">{session?.user?.name}</p>\r\n              <p className=\"user-email\">{session?.user?.email}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <nav className=\"sidebar-nav\">\r\n          <button\r\n            className={`new-complaint-btn ${\r\n              activeTab === \"new\" ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              setActiveTab(\"new\");\r\n              resetForm();\r\n            }}\r\n          >\r\n            <FiPlus /> Register New Complaint\r\n          </button>\r\n          <button\r\n            className={`nav-link ${activeTab === \"history\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"history\")}\r\n          >\r\n            <FiList /> My Complaints\r\n          </button>\r\n        </nav>\r\n        <button\r\n          className=\"logout-btn\"\r\n          onClick={() => signOut({ callbackUrl: \"/login\" })}\r\n        >\r\n          <FiLogOut /> Sign Out\r\n        </button>\r\n      </aside>\r\n      {/* Main Content */}\r\n      <main className=\"main-content\">\r\n        {activeTab === \"new\" ? (\r\n          <div className=\"form-container\">\r\n            <div className=\"form-header\">\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={() => setActiveTab(\"history\")}\r\n              >\r\n                <FiArrowLeft /> Back to Complaints\r\n              </button>\r\n              <h2>Register New Complaint</h2>\r\n            </div>\r\n            {errors.length > 0 && (\r\n              <div className=\"alert-error\">\r\n                <FiAlertCircle />\r\n                <div>\r\n                  <h3>Submission Errors</h3>\r\n                  <ul>\r\n                    {errors.map((e, i) => (\r\n                      <li key={i}>{e}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-grid\">\r\n                {/* Personal Information Section */}\r\n                <div className=\"form-section span-2\">\r\n                  <h3>Personal Information</h3>\r\n                  <div className=\"section-grid\">\r\n                    <div className=\"form-field\">\r\n                      <label>\r\n                        Name\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"Name\"\r\n                        value={form.Name}\r\n                        onChange={handleChange}\r\n                        required\r\n                        maxLength={100}\r\n                        placeholder=\"Enter your name...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                      <label>\r\n                        Email\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"Email\"\r\n                        value={form.Email}\r\n                        onChange={handleChange}\r\n                        required\r\n                        maxLength={100}\r\n                        placeholder=\"Enter your email...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                      <label>\r\n                        Phone Number\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <div className=\"input-with-clear\">\r\n                        <input\r\n                          type=\"tel\"\r\n                          name=\"Phone Number\"\r\n                          value={form[\"Phone Number\"]}\r\n                          onChange={handleChange}\r\n                          required\r\n                          maxLength={10}\r\n                          pattern=\"^[0-9]{10}$\"\r\n                          placeholder=\"Enter 10-digit phone number...\"\r\n                        />\r\n                        {form[\"Phone Number\"] && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"clear-input\"\r\n                            onClick={() => clearField(\"Phone Number\")}\r\n                            aria-label=\"Clear phone number\"\r\n                          >\r\n                            <FiX />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Complaint Details Section */}\r\n                <div className=\"form-section span-2\">\r\n                  <h3>Complaint Details</h3>\r\n                  <div className=\"section-grid\">\r\n                    <div className=\"form-field\">\r\n                      <label>\r\n                        Complaint Type\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <div className=\"select-with-clear\">\r\n                        <select\r\n                          name=\"Complaint Type\"\r\n                          value={form[\"Complaint Type\"]}\r\n                          onChange={handleChange}\r\n                          required\r\n                        >\r\n                          <option value=\"\">Select Complaint Type</option>\r\n                          {FIELD_MAPPINGS[\"Complaint Type\"].options.map(\r\n                            (opt) => (\r\n                              <option key={opt} value={opt}>\r\n                                {opt}\r\n                              </option>\r\n                            )\r\n                          )}\r\n                        </select>\r\n                        {form[\"Complaint Type\"] && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"clear-select\"\r\n                            onClick={() => clearField(\"Complaint Type\")}\r\n                            aria-label=\"Clear complaint type\"\r\n                          >\r\n                            <FiX />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                      <label>Complaint Sub-Type</label>\r\n                      <div className=\"select-with-clear\">\r\n                        <select\r\n                          name=\"Complaint Sub-Type\"\r\n                          value={form[\"Complaint Sub-Type\"]}\r\n                          onChange={handleChange}\r\n                          disabled={!form[\"Complaint Type\"]}\r\n                        >\r\n                          <option value=\"\">Select Sub-Type</option>\r\n                          {form[\"Complaint Type\"] &&\r\n                            FIELD_MAPPINGS[\"Complaint Sub-Type\"].options[\r\n                              form[\"Complaint Type\"]\r\n                            ]?.map((opt) => (\r\n                              <option key={opt} value={opt}>\r\n                                {opt}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                        {form[\"Complaint Sub-Type\"] && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"clear-select\"\r\n                            onClick={() => clearField(\"Complaint Sub-Type\")}\r\n                            aria-label=\"Clear complaint sub-type\"\r\n                          >\r\n                            <FiX />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                      <label>\r\n                        Location\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <div className=\"select-with-clear\">\r\n                        <select\r\n                          name=\"Location\"\r\n                          value={form.Location}\r\n                          onChange={handleChange}\r\n                          required\r\n                        >\r\n                          <option value=\"\">Select Location</option>\r\n                          {FIELD_MAPPINGS.Location.options.map((opt) => (\r\n                            <option key={opt} value={opt}>\r\n                              {opt}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {form.Location && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"clear-select\"\r\n                            onClick={() => clearField(\"Location\")}\r\n                            aria-label=\"Clear location\"\r\n                          >\r\n                            <FiX />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                      <label>\r\n                        Company Name\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <div className=\"select-with-clear\">\r\n                        <select\r\n                          name=\"Company Name\"\r\n                          value={form[\"Company Name\"]}\r\n                          onChange={handleChange}\r\n                          required\r\n                          disabled={!form.Location}\r\n                        >\r\n                          <option value=\"\">Select Branch</option>\r\n                          {companyNameOptions.map((opt) => (\r\n                            <option key={opt} value={opt}>\r\n                              {opt}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {form[\"Company Name\"] && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"clear-select\"\r\n                            onClick={() => clearField(\"Company Name\")}\r\n                            aria-label=\"Clear company name\"\r\n                          >\r\n                            <FiX />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Complaint Description Section */}\r\n                <div className=\"form-section span-2\">\r\n                  <h3>Complaint Description</h3>\r\n                  <div className=\"section-grid\">\r\n                    <div className=\"form-field\">\r\n                      <label>\r\n                        Title\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"Title\"\r\n                        value={form.Title}\r\n                        onChange={handleChange}\r\n                        required\r\n                        maxLength={200}\r\n                        placeholder=\"Enter complaint title...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-field span-2\">\r\n                      <label>\r\n                        Description\r\n                        <span className=\"required\">*</span>\r\n                      </label>\r\n                      <textarea\r\n                        name=\"Description\"\r\n                        value={form.Description}\r\n                        onChange={handleChange}\r\n                        required\r\n                        rows={5}\r\n                        maxLength={2000}\r\n                        placeholder=\"Describe your complaint in detail...\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* File upload */}\r\n                <div className=\"form-section span-2\">\r\n                  <h3>Attachments</h3>\r\n                  <div className=\"form-field\">\r\n                    <label>Upload Files (max {MAX_FILE_COUNT} files)</label>\r\n                    <div className=\"file-upload\">\r\n                      <label className=\"file-upload-btn\">\r\n                        <input\r\n                          type=\"file\"\r\n                          multiple\r\n                          onChange={handleFileChange}\r\n                          accept={ALLOWED_FILE_TYPES.join(\",\")}\r\n                          disabled={files.length >= MAX_FILE_COUNT}\r\n                          ref={fileInputRef}\r\n                        />\r\n                        <FiPaperclip /> Choose Files\r\n                      </label>\r\n                      <p className=\"file-hint\">\r\n                        Allowed: JPG, PNG, PDF (max{\" \"}\r\n                        {MAX_FILE_SIZE / 1024 / 1024}MB each)\r\n                      </p>\r\n                      {files.length > 0 && (\r\n                        <div className=\"file-preview\">\r\n                          {files.map((file, i) => (\r\n                            <div key={i} className=\"file-item\">\r\n                              <div className=\"file-info\">\r\n                                <FiPaperclip />\r\n                                <span className=\"file-name\" title={file.name}>\r\n                                  {file.name.length > 30\r\n                                    ? `${file.name.substring(\r\n                                        0,\r\n                                        15\r\n                                      )}...${file.name.substring(\r\n                                        file.name.length - 10\r\n                                      )}`\r\n                                    : file.name}\r\n                                </span>\r\n                                <span className=\"file-size\">\r\n                                  ({(file.size / 1024).toFixed(1)}KB)\r\n                                </span>\r\n                              </div>\r\n                              <button\r\n                                type=\"button\"\r\n                                onClick={() => removeFile(i)}\r\n                                className=\"remove-file-btn\"\r\n                                aria-label={`Remove file ${file.name}`}\r\n                              >\r\n                                <FiX />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Submit button */}\r\n                <div className=\"form-actions span-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={resetForm}\r\n                    className=\"reset-btn\"\r\n                  >\r\n                    Reset Form\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={loadingForm}\r\n                    className=\"submit-btn\"\r\n                  >\r\n                    {loadingForm ? (\r\n                      <>\r\n                        <div className=\"spinner\"></div>\r\n                        Submitting...\r\n                      </>\r\n                    ) : (\r\n                      \"Submit Complaint\"\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div className=\"history-container\">\r\n            <header>\r\n              <h1>My Complaints</h1>\r\n              <div className=\"search-filter\">\r\n                <div className=\"search-bar\">\r\n                  <FiSearch />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search complaints...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"status-filters\">\r\n                  <button\r\n                    className={statusFilter === \"all\" ? \"active\" : \"\"}\r\n                    onClick={() => setStatusFilter(\"all\")}\r\n                    aria-label=\"Show all complaints\"\r\n                  >\r\n                    All\r\n                  </button>\r\n                  {Object.entries(STATUS_CONFIG).map(([status, config]) => (\r\n                    <button\r\n                      key={status}\r\n                      className={statusFilter === status ? \"active\" : \"\"}\r\n                      onClick={() => setStatusFilter(status)}\r\n                      style={{ color: config.color }}\r\n                      aria-label={`Show ${status} complaints`}\r\n                    >\r\n                      {config.icon}\r\n                      {config.text}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </header>\r\n            {loadingComplaints ? (\r\n              <LoadingSpinner />\r\n            ) : fetchError ? (\r\n              <div className=\"error-message\">\r\n                <FiAlertCircle />\r\n                <p>{fetchError}</p>\r\n                <button onClick={fetchComplaints}>Retry</button>\r\n              </div>\r\n            ) : filteredComplaints.length === 0 ? (\r\n              <div className=\"empty-state\">\r\n                <p>\r\n                  {searchTerm\r\n                    ? \"No matching complaints found\"\r\n                    : \"You haven't submitted any complaints yet\"}\r\n                </p>\r\n                <button\r\n                  className=\"new-complaint-btn\"\r\n                  onClick={() => {\r\n                    setActiveTab(\"new\");\r\n                    resetForm();\r\n                  }}\r\n                >\r\n                  <FiPlus /> Register New Complaint\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"complaints-grid\">\r\n                {filteredComplaints.map((complaint) => (\r\n                  <ComplaintCard\r\n                    key={complaint.complaintId}\r\n                    complaint={complaint}\r\n                    expanded={expandedComplaint === complaint.complaintId}\r\n                    onToggleExpand={() =>\r\n                      toggleComplaintExpand(complaint.complaintId)\r\n                    }\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default UserDashboard;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}